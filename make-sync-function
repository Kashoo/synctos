#!/usr/bin/env node

var fs = require('fs');
var path = require('path');

var errorStatus = 1;
var successStatus = 0;

var workingDir = path.dirname(process.argv[1]);

// Verify the correct number of commandline params
if (process.argv.length !== 4) {
  var nodeBinary = path.basename(process.argv[0]);
  var scriptName = path.basename(process.argv[1]);

  console.log('A utility for creating structured sync functions for Couchbase Sync Gateway.\n');

  console.log('Usage:  ' + scriptName + ' <sync_document_definitions_file> <output_file>');
  console.log('   or:  ' + nodeBinary + ' ' + scriptName + ' <sync_document_definitions_file> <output_file>\n');

  console.log('Arguments:');
  console.log('    sync_document_definitions_file');
  console.log('        Path to the JavaScript/JSON file that defines the document types to use in the sync function');
  console.log('    output_file');
  console.log('        Path to the file in which to output the sync function\n');

  console.log('For example:  ' + scriptName + ' /path/to/my-sync-doc-definitions.js /path/to/my-new-sync-function.js\n');

  console.log('See the README for more information.');

  return errorStatus;
}

syncDocDefnFilename = process.argv[2];
outputFilename = process.argv[3];

var syncDocDefn;
try {
  syncDocDefn = fs.readFileSync(syncDocDefnFilename, 'utf8');

  // Normalize line endings and indent each line so that it matches the indentation of the sync function template into
  // which it will be injected
  syncDocDefn = syncDocDefn.trim().replace(/(?:\r\n)|(?:\r)|(?:\n)/g, function() { return '\n  '; });
} catch (ex) {
  console.log('Unable to read the sync document definitions file: ' + ex);

  return errorStatus;
}

var syncFuncTemplate;
try {
  syncFuncTemplate = fs.readFileSync(workingDir + '/etc/sync-function-template.js', 'utf8');
} catch (ex) {
  console.log('Unable to read the sync function template file: ' + ex);

  return errorStatus;
}

var syncFunc = syncFuncTemplate.replace('%SYNC_DOCUMENT_DEFINITIONS%', function() { return syncDocDefn; });

try {
  fs.writeFileSync(outputFilename, syncFunc, 'utf8');
} catch (ex) {
  console.log('Unable to write the sync function to the output file: ' + ex);

  return errorStatus;
}

console.log('Sync function written to ' + workingDir + '/' + outputFilename);

return successStatus;
